[1mdiff --git a/.classpath b/.classpath[m
[1mnew file mode 100644[m
[1mindex 0000000..7d3b4d8[m
[1m--- /dev/null[m
[1m+++ b/.classpath[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<classpath>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-15">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="module" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="src" path="src"/>[m
[32m+[m	[32m<classpathentry kind="output" path="bin"/>[m
[32m+[m[32m</classpath>[m
[1mdiff --git a/.project b/.project[m
[1mnew file mode 100644[m
[1mindex 0000000..a132403[m
[1m--- /dev/null[m
[1m+++ b/.project[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<projectDescription>[m
[32m+[m	[32m<name>chess-system</name>[m
[32m+[m	[32m<comment></comment>[m
[32m+[m	[32m<projects>[m
[32m+[m	[32m</projects>[m
[32m+[m	[32m<buildSpec>[m
[32m+[m		[32m<buildCommand>[m
[32m+[m			[32m<name>org.eclipse.jdt.core.javabuilder</name>[m
[32m+[m			[32m<arguments>[m
[32m+[m			[32m</arguments>[m
[32m+[m		[32m</buildCommand>[m
[32m+[m	[32m</buildSpec>[m
[32m+[m	[32m<natures>[m
[32m+[m		[32m<nature>org.eclipse.jdt.core.javanature</nature>[m
[32m+[m	[32m</natures>[m
[32m+[m[32m</projectDescription>[m
[1mdiff --git a/.settings/org.eclipse.jdt.core.prefs b/.settings/org.eclipse.jdt.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..223b166[m
[1m--- /dev/null[m
[1m+++ b/.settings/org.eclipse.jdt.core.prefs[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.targetPlatform=15[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve[m
[32m+[m[32morg.eclipse.jdt.core.compiler.compliance=15[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.lineNumber=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.localVariable=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.sourceFile=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.assertIdentifier=error[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.enumIdentifier=error[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=warning[m
[32m+[m[32morg.eclipse.jdt.core.compiler.release=enabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.source=15[m
[1mdiff --git a/src/application/Program.java b/src/application/Program.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1b5ebc0[m
[1m--- /dev/null[m
[1m+++ b/src/application/Program.java[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mpackage application;[m
[32m+[m
[32m+[m[32mimport chess.ChessMatch;[m
[32m+[m
[32m+[m[32mpublic class Program {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m[41m		[m
[32m+[m[41m		[m
[32m+[m		[32mChessMatch chessMatch = new ChessMatch();[m
[32m+[m[41m		[m
[32m+[m		[32mUI.printBoard(chessMatch.getPieces());[m
[32m+[m[41m		[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/application/UI.java b/src/application/UI.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3d9016b[m
[1m--- /dev/null[m
[1m+++ b/src/application/UI.java[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mpackage application;[m
[32m+[m
[32m+[m[32mimport chess.ChessPiece;[m
[32m+[m
[32m+[m[32mpublic class UI {[m
[32m+[m	[32mpublic static void printBoard(ChessPiece[][] pieces) {[m
[32m+[m		[32mfor (int i = 0; i < pieces.length; i++) {[m
[32m+[m			[32mSystem.out.print((8 - i) + " ");[m
[32m+[m			[32mfor (int j = 0; j < pieces.length; j++) {[m
[32m+[m				[32mprintPiece(pieces[i][j]);[m
[32m+[m			[32m}[m
[32m+[m			[32mSystem.out.println();[m
[32m+[m		[32m}[m
[32m+[m		[32mSystem.out.println("  a b c d e f g h");[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate static void printPiece(ChessPiece piece) {[m
[32m+[m		[32mif (piece == null) {[m
[32m+[m			[32mSystem.out.print("-");[m
[32m+[m		[32m} else {[m
[32m+[m			[32mSystem.out.print(piece);[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m		[32mSystem.out.print(" ");[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/boardgame/Board.java b/src/boardgame/Board.java[m
[1mnew file mode 100644[m
[1mindex 0000000..bafdc9e[m
[1m--- /dev/null[m
[1m+++ b/src/boardgame/Board.java[m
[36m@@ -0,0 +1,63 @@[m
[32m+[m[32mpackage boardgame;[m
[32m+[m
[32m+[m[32mpublic class Board {[m
[32m+[m	[32mprivate int rows;[m
[32m+[m	[32mprivate int columns;[m
[32m+[m	[32mprivate Piece[][] pieces;[m
[32m+[m
[32m+[m	[32mpublic Board(int rows, int columns) {[m
[32m+[m		[32mif (rows < 1 || columns < 1) {[m
[32m+[m			[32mthrow new BoardException("Error creating board: there must be at least 1 row and 1 column");[m
[32m+[m		[32m}[m
[32m+[m		[32mthis.rows = rows;[m
[32m+[m		[32mthis.columns = columns;[m
[32m+[m		[32mpieces = new Piece[rows][columns];[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic int getRows() {[m
[32m+[m		[32mreturn rows;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic int getColumns() {[m
[32m+[m		[32mreturn columns;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic Piece piece(int row, int column) {[m
[32m+[m		[32mif(!positionExists(row, column)) {[m
[32m+[m			[32mthrow new BoardException("Position not on the board");[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn pieces[row][column];[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic Piece piece(Position position) {[m
[32m+[m		[32mif(!positionExists(position)) {[m
[32m+[m			[32mthrow new BoardException("Position not on the board");[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn pieces[position.getRow()][position.getColumn()];[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void placePiece(Piece piece, Position position) {[m
[32m+[m		[32mif(thereIsAPiece(position)) {[m
[32m+[m			[32mthrow new BoardException("Ther eis alread a piece on position " + position);[m
[32m+[m		[32m}[m
[32m+[m		[32mpieces[position.getRow()][position.getColumn()] = piece;[m
[32m+[m		[32mpiece.position = position;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate boolean positionExists(int row, int column) {[m
[32m+[m		[32mreturn row >= 0 && row < rows && column >= 0 && column < columns;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic boolean positionExists(Position position) {[m
[32m+[m		[32mreturn positionExists(position.getRow(), position.getColumn());[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic boolean thereIsAPiece(Position position) {[m
[32m+[m		[32mif(!positionExists(position)) {[m
[32m+[m			[32mthrow new BoardException("Position not on the Board");[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn piece(position) != null;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/boardgame/BoardException.java b/src/boardgame/BoardException.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e40cb96[m
[1m--- /dev/null[m
[1m+++ b/src/boardgame/BoardException.java[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mpackage boardgame;[m
[32m+[m
[32m+[m[32mpublic class BoardException extends RuntimeException{[m
[32m+[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m
[32m+[m	[32mpublic BoardException(String msg) {[m
[32m+[m		[32msuper(msg);[m[41m [m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/boardgame/Piece.java b/src/boardgame/Piece.java[m
[1mnew file mode 100644[m
[1mindex 0000000..25e8f4a[m
[1m--- /dev/null[m
[1m+++ b/src/boardgame/Piece.java[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mpackage boardgame;[m
[32m+[m
[32m+[m[32mpublic class Piece {[m
[32m+[m[41m	[m
[32m+[m	[32mprotected Position position;[m
[32m+[m	[32mprivate Board board;[m
[32m+[m[41m	[m
[32m+[m[41m	[m
[32m+[m	[32mpublic Piece(Board board) {[m
[32m+[m		[32mthis.board = board;[m
[32m+[m		[32mposition = null;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprotected Board getBoard() {[m
[32m+[m		[32mreturn board;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m[32m}[m
[1mdiff --git a/src/boardgame/Position.java b/src/boardgame/Position.java[m
[1mnew file mode 100644[m
[1mindex 0000000..70b55d6[m
[1m--- /dev/null[m
[1m+++ b/src/boardgame/Position.java[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32mpackage boardgame;[m
[32m+[m
[32m+[m[32mpublic class Position {[m
[32m+[m	[32mprivate int row;[m
[32m+[m	[32mprivate int column;[m
[32m+[m	[32mpublic Position(int row, int column) {[m
[32m+[m		[32mthis.row = row;[m
[32m+[m		[32mthis.column = column;[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic int getRow() {[m
[32m+[m		[32mreturn row;[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic void setRow(int row) {[m
[32m+[m		[32mthis.row = row;[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic int getColumn() {[m
[32m+[m		[32mreturn column;[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic void setColumn(int column) {[m
[32m+[m		[32mthis.column = column;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic String toString() {[m
[32m+[m		[32mreturn row + ", " + column;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/chess/ChessException.java b/src/chess/ChessException.java[m
[1mnew file mode 100644[m
[1mindex 0000000..6b5d284[m
[1m--- /dev/null[m
[1m+++ b/src/chess/ChessException.java[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mpackage chess;[m
[32m+[m
[32m+[m[32mpublic class ChessException extends RuntimeException{[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m[41m	[m
[32m+[m	[32mpublic ChessException(String msg) {[m
[32m+[m		[32msuper(msg);[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/chess/ChessMatch.java b/src/chess/ChessMatch.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8512e5d[m
[1m--- /dev/null[m
[1m+++ b/src/chess/ChessMatch.java[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32mpackage chess;[m
[32m+[m
[32m+[m[32mimport boardgame.Board;[m
[32m+[m[32mimport boardgame.Position;[m
[32m+[m[32mimport chess.pieces.King;[m
[32m+[m[32mimport chess.pieces.Rook;[m
[32m+[m
[32m+[m[32mpublic class ChessMatch {[m
[32m+[m[41m	[m
[32m+[m	[32mprivate Board board;[m
[32m+[m[41m	[m
[32m+[m	[32mpublic ChessMatch() {[m
[32m+[m		[32mboard = new Board(8, 8);[m
[32m+[m		[32minitialSetup();[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic ChessPiece[][] getPieces(){[m
[32m+[m		[32mChessPiece[][] mat = new ChessPiece[board.getRows()][board.getColumns()];[m
[32m+[m		[32mfor (int i = 0; i < board.getRows(); i++) {[m
[32m+[m			[32mfor (int j = 0; j < board.getColumns(); j++) {[m
[32m+[m				[32mmat[i][j] = (ChessPiece)board.piece(i, j);[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn mat;[m
[32m+[m	[32m}[m
[32m+[m	[32mprivate void placeNewPiece(char column, int row, ChessPiece piece) {[m
[32m+[m		[32mboard.placePiece(piece, new ChessPosition(column, row).toPosition());[m
[32m+[m	[32m}[m
[32m+[m	[32mprivate void initialSetup() {[m
[32m+[m		[32mplaceNewPiece('b', 6, new Rook(board, Color.WHITE));[m
[32m+[m		[32mplaceNewPiece('e', 8, new King(board, Color.WHITE));[m
[32m+[m		[32mplaceNewPiece('e', 1, new King(board, Color.WHITE));[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/chess/ChessPiece.java b/src/chess/ChessPiece.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8fefab2[m
[1m--- /dev/null[m
[1m+++ b/src/chess/ChessPiece.java[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mpackage chess;[m
[32m+[m
[32m+[m[32mimport boardgame.Board;[m
[32m+[m[32mimport boardgame.Piece;[m
[32m+[m
[32m+[m[32mpublic class ChessPiece extends Piece{[m
[32m+[m
[32m+[m	[32mprivate Color color;[m
[32m+[m[41m	[m
[32m+[m[41m	[m
[32m+[m	[32mpublic ChessPiece(Board board, Color color) {[m
[32m+[m		[32msuper(board);[m
[32m+[m		[32mthis.color = color;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m
[32m+[m	[32mpublic Color getColor() {[m
[32m+[m		[32mreturn color;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[41m	[m
[32m+[m[32m}[m
[1mdiff --git a/src/chess/ChessPosition.java b/src/chess/ChessPosition.java[m
[1mnew file mode 100644[m
[1mindex 0000000..0a97825[m
[1m--- /dev/null[m
[1m+++ b/src/chess/ChessPosition.java[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32mpackage chess;[m
[32m+[m
[32m+[m[32mimport boardgame.Position;[m
[32m+[m
[32m+[m[32mpublic class ChessPosition {[m
[32m+[m	[32mprivate char column;[m
[32m+[m	[32mprivate int row;[m
[32m+[m[41m	[m
[32m+[m	[32mpublic ChessPosition(char column, int row) {[m
[32m+[m		[32mif(column < 'a' || column > 'h' || row < 1 || row > 8) {[m
[32m+[m			[32mthrow new ChessException("Error instantiating ChessPosition. Valid values are from a1 to h8");[m
[32m+[m		[32m}[m
[32m+[m		[32mthis.column = column;[m
[32m+[m		[32mthis.row = row;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic char getColumn() {[m
[32m+[m		[32mreturn column;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic int getRow() {[m
[32m+[m		[32mreturn row;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mprotected Position toPosition() {[m
[32m+[m		[32mreturn new Position(8 - row, column - 'a');[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mprotected static ChessPosition fromPosition(Position position) {[m
[32m+[m		[32mreturn new ChessPosition((char)('a' - position.getColumn()), 8 - position.getRow());[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic String toString() {[m
[32m+[m		[32mreturn "" + column + row;//concatenação de Strings forçado pelo ("")[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m[32m}[m
[1mdiff --git a/src/chess/Color.java b/src/chess/Color.java[m
[1mnew file mode 100644[m
[1mindex 0000000..a5bfc3b[m
[1m--- /dev/null[m
[1m+++ b/src/chess/Color.java[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mpackage chess;[m
[32m+[m
[32m+[m[32mpublic enum Color {[m
[32m+[m	[32mBLACK,[m
[32m+[m	[32mWHITE;[m
[32m+[m[32m}[m
[1mdiff --git a/src/chess/pieces/King.java b/src/chess/pieces/King.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d5ab493[m
[1m--- /dev/null[m
[1m+++ b/src/chess/pieces/King.java[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mpackage chess.pieces;[m
[32m+[m
[32m+[m[32mimport boardgame.Board;[m
[32m+[m[32mimport chess.ChessPiece;[m
[32m+[m[32mimport chess.Color;[m
[32m+[m
[32m+[m[32mpublic class King extends ChessPiece{[m
[32m+[m
[32m+[m	[32mpublic King(Board board, Color color) {[m
[32m+[m		[32msuper(board, color);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic String toString() {[m
[32m+[m		[32mreturn "K";[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/chess/pieces/Rook.java b/src/chess/pieces/Rook.java[m
[1mnew file mode 100644[m
[1mindex 0000000..bcd8e4a[m
[1m--- /dev/null[m
[1m+++ b/src/chess/pieces/Rook.java[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mpackage chess.pieces;[m
[32m+[m
[32m+[m[32mimport boardgame.Board;[m
[32m+[m[32mimport chess.ChessPiece;[m
[32m+[m[32mimport chess.Color;[m
[32m+[m
[32m+[m[32mpublic class Rook extends ChessPiece{[m
[32m+[m
[32m+[m	[32mpublic Rook(Board board, Color color) {[m
[32m+[m		[32msuper(board, color);[m
[32m+[m[41m		[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic String toString() {[m
[32m+[m		[32mreturn "R";[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
